// models/OrderSchema.js
const mongoose = require('mongoose');

const OrderSchema = new mongoose.Schema({
    shippingInfo: {
        address: { type: String, required: true },
        city: { type: String, required: true },
        state: { type: String, required: true },
        country: { type: String, required: true },
        pincode: { type: String, required: true },
        phoneNo: { type: String, required: true },
    },
    OrderItems: [
        {
            name: { type: String, required: true },
            price: { type: Number, required: true },
            quantity: { type: Number, required: true },
            image: { type: String, required: true },
            productId: {
                type: mongoose.Schema.ObjectId,
                ref: "Product",
                required: true,
            },
        }
    ],
    userId: {
        type: mongoose.Schema.ObjectId,
        ref: "user",
        required: true,
    },
    paymentInfo: {
        id: { type: String },
        status: { type: String, default: "Pending" },
        type: { type: String },
        va_number: { type: String },
        bank: { type: String },
        store: { type: String },
        payment_code: { type: String },
        midtrans_order_id: { type: String },
        qr_string: { type: String },
        expiry_time: { type: Date }, // âœ… tambahkan ini
        updatedAt: { type: Date },
    },
    paidAt: { type: Date, default: null },
    itemsPrice: { type: Number, required: true },
    taxPrice: { type: Number, required: true },
    shippingPrice: { type: Number, required: true },
    totalPrice: { type: Number, required: true },
    orderStatus: {
        type: String,
        enum: ["Pending", "Paid", "Cancelled", "Processing", "Shipped", "Delivered"],
        default: "Pending"
    },
    cancelReason: { type: String },
    deliveredAt: Date,
    createdAt: {
        type: Date,
        default: Date.now,
    },
});

module.exports = mongoose.models.order || mongoose.model("order", OrderSchema);
